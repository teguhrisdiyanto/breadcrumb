// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: proto/address/v1/address.proto

package addressv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// WhereCondition define query WHERE Condition in gorm.
type WhereCondition int32

const (
	WhereCondition_WHERE_CONDITION_INVALID WhereCondition = 0
	WhereCondition_WHERE_CONDITION_AND     WhereCondition = 1
	WhereCondition_WHERE_CONDITION_OR      WhereCondition = 2
	WhereCondition_WHERE_CONDITION_NOT     WhereCondition = 3
)

// Enum value maps for WhereCondition.
var (
	WhereCondition_name = map[int32]string{
		0: "WHERE_CONDITION_INVALID",
		1: "WHERE_CONDITION_AND",
		2: "WHERE_CONDITION_OR",
		3: "WHERE_CONDITION_NOT",
	}
	WhereCondition_value = map[string]int32{
		"WHERE_CONDITION_INVALID": 0,
		"WHERE_CONDITION_AND":     1,
		"WHERE_CONDITION_OR":      2,
		"WHERE_CONDITION_NOT":     3,
	}
)

func (x WhereCondition) Enum() *WhereCondition {
	p := new(WhereCondition)
	*p = x
	return p
}

func (x WhereCondition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WhereCondition) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_address_v1_address_proto_enumTypes[0].Descriptor()
}

func (WhereCondition) Type() protoreflect.EnumType {
	return &file_proto_address_v1_address_proto_enumTypes[0]
}

func (x WhereCondition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WhereCondition.Descriptor instead.
func (WhereCondition) EnumDescriptor() ([]byte, []int) {
	return file_proto_address_v1_address_proto_rawDescGZIP(), []int{0}
}

// Address address response message represent entity address.
type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReferenceId     uint64 `protobuf:"varint,2,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	ReferenceType   string `protobuf:"bytes,3,opt,name=reference_type,json=referenceType,proto3" json:"reference_type,omitempty"`
	PrimaryAddress  bool   `protobuf:"varint,4,opt,name=primary_address,json=primaryAddress,proto3" json:"primary_address,omitempty"`
	StreetOne       string `protobuf:"bytes,5,opt,name=street_one,json=streetOne,proto3" json:"street_one,omitempty"`
	StreetTwo       string `protobuf:"bytes,6,opt,name=street_two,json=streetTwo,proto3" json:"street_two,omitempty"`
	SubDistrict     string `protobuf:"bytes,7,opt,name=sub_district,json=subDistrict,proto3" json:"sub_district,omitempty"`
	VillageDistrict string `protobuf:"bytes,8,opt,name=village_district,json=villageDistrict,proto3" json:"village_district,omitempty"`
	City            string `protobuf:"bytes,9,opt,name=city,proto3" json:"city,omitempty"`
	Province        string `protobuf:"bytes,10,opt,name=province,proto3" json:"province,omitempty"`
	Country         string `protobuf:"bytes,11,opt,name=country,proto3" json:"country,omitempty"`
	PostalCode      string `protobuf:"bytes,12,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	CreatedAt       int64  `protobuf:"fixed64,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       int64  `protobuf:"fixed64,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	GoogleMapUrl    string `protobuf:"bytes,15,opt,name=google_map_url,json=googleMapUrl,proto3" json:"google_map_url,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_address_v1_address_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_proto_address_v1_address_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_proto_address_v1_address_proto_rawDescGZIP(), []int{0}
}

func (x *Address) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Address) GetReferenceId() uint64 {
	if x != nil {
		return x.ReferenceId
	}
	return 0
}

func (x *Address) GetReferenceType() string {
	if x != nil {
		return x.ReferenceType
	}
	return ""
}

func (x *Address) GetPrimaryAddress() bool {
	if x != nil {
		return x.PrimaryAddress
	}
	return false
}

func (x *Address) GetStreetOne() string {
	if x != nil {
		return x.StreetOne
	}
	return ""
}

func (x *Address) GetStreetTwo() string {
	if x != nil {
		return x.StreetTwo
	}
	return ""
}

func (x *Address) GetSubDistrict() string {
	if x != nil {
		return x.SubDistrict
	}
	return ""
}

func (x *Address) GetVillageDistrict() string {
	if x != nil {
		return x.VillageDistrict
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Address) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *Address) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Address) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Address) GetGoogleMapUrl() string {
	if x != nil {
		return x.GoogleMapUrl
	}
	return ""
}

type RequestFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page           int32                          `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit          int32                          `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Sort           string                         `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
	OrderBy        string                         `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	SearchField    string                         `protobuf:"bytes,5,opt,name=search_field,json=searchField,proto3" json:"search_field,omitempty"`
	SearchValue    string                         `protobuf:"bytes,6,opt,name=search_value,json=searchValue,proto3" json:"search_value,omitempty"`
	Where          *structpb.Struct               `protobuf:"bytes,7,opt,name=where,proto3" json:"where,omitempty"`
	WhereIn        map[string]*structpb.ListValue `protobuf:"bytes,8,rep,name=where_in,json=whereIn,proto3" json:"where_in,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	WhereCondition WhereCondition                 `protobuf:"varint,9,opt,name=where_condition,json=whereCondition,proto3,enum=proto.address.v1.WhereCondition" json:"where_condition,omitempty"`
	WhereNotIn     map[string]*structpb.ListValue `protobuf:"bytes,10,rep,name=where_not_in,json=whereNotIn,proto3" json:"where_not_in,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	WhereNotEqual  *structpb.Struct               `protobuf:"bytes,11,opt,name=where_not_equal,json=whereNotEqual,proto3" json:"where_not_equal,omitempty"`
	Between        map[string]*structpb.ListValue `protobuf:"bytes,12,rep,name=between,proto3" json:"between,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RequestFilter) Reset() {
	*x = RequestFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_address_v1_address_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestFilter) ProtoMessage() {}

func (x *RequestFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_address_v1_address_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestFilter.ProtoReflect.Descriptor instead.
func (*RequestFilter) Descriptor() ([]byte, []int) {
	return file_proto_address_v1_address_proto_rawDescGZIP(), []int{1}
}

func (x *RequestFilter) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RequestFilter) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RequestFilter) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *RequestFilter) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *RequestFilter) GetSearchField() string {
	if x != nil {
		return x.SearchField
	}
	return ""
}

func (x *RequestFilter) GetSearchValue() string {
	if x != nil {
		return x.SearchValue
	}
	return ""
}

func (x *RequestFilter) GetWhere() *structpb.Struct {
	if x != nil {
		return x.Where
	}
	return nil
}

func (x *RequestFilter) GetWhereIn() map[string]*structpb.ListValue {
	if x != nil {
		return x.WhereIn
	}
	return nil
}

func (x *RequestFilter) GetWhereCondition() WhereCondition {
	if x != nil {
		return x.WhereCondition
	}
	return WhereCondition_WHERE_CONDITION_INVALID
}

func (x *RequestFilter) GetWhereNotIn() map[string]*structpb.ListValue {
	if x != nil {
		return x.WhereNotIn
	}
	return nil
}

func (x *RequestFilter) GetWhereNotEqual() *structpb.Struct {
	if x != nil {
		return x.WhereNotEqual
	}
	return nil
}

func (x *RequestFilter) GetBetween() map[string]*structpb.ListValue {
	if x != nil {
		return x.Between
	}
	return nil
}

var File_proto_address_v1_address_proto protoreflect.FileDescriptor

var file_proto_address_v1_address_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e,
	0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xe7, 0x03, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x54, 0x77, 0x6f, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x12, 0x29, 0x0a, 0x10, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x69, 0x6c, 0x6c,
	0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x10, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x10, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x6d,
	0x61, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x55, 0x72, 0x6c, 0x22, 0xd8, 0x06, 0x0a, 0x0d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x77,
	0x68, 0x65, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x77, 0x68,
	0x65, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x57, 0x68,
	0x65, 0x72, 0x65, 0x49, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x77, 0x68, 0x65, 0x72,
	0x65, 0x49, 0x6e, 0x12, 0x49, 0x0a, 0x0f, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x68, 0x65, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e,
	0x77, 0x68, 0x65, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51,
	0x0a, 0x0c, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x57, 0x68, 0x65, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x49, 0x6e,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x77, 0x68, 0x65, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x49,
	0x6e, 0x12, 0x3f, 0x0a, 0x0f, 0x77, 0x68, 0x65, 0x72, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x65,
	0x71, 0x75, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x0d, 0x77, 0x68, 0x65, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x45, 0x71, 0x75,
	0x61, 0x6c, 0x12, 0x46, 0x0a, 0x07, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x1a, 0x56, 0x0a, 0x0c, 0x57, 0x68,
	0x65, 0x72, 0x65, 0x49, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x59, 0x0a, 0x0f, 0x57, 0x68, 0x65, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x49, 0x6e,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x56, 0x0a,
	0x0c, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x77, 0x0a, 0x0e, 0x57, 0x68, 0x65, 0x72, 0x65, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x17, 0x57, 0x48, 0x45, 0x52, 0x45,
	0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x57, 0x48, 0x45, 0x52, 0x45, 0x5f, 0x43, 0x4f,
	0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a,
	0x12, 0x57, 0x48, 0x45, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x57, 0x48, 0x45, 0x52, 0x45, 0x5f, 0x43,
	0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x10, 0x03, 0x42, 0x86,
	0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x2e,
	0x67, 0x6f, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x20, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x54, 0x41, 0x58, 0xaa, 0x02, 0x16, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x2e, 0x67, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x16, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5c, 0x67, 0x6f, 0x5c, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5c, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_address_v1_address_proto_rawDescOnce sync.Once
	file_proto_address_v1_address_proto_rawDescData = file_proto_address_v1_address_proto_rawDesc
)

func file_proto_address_v1_address_proto_rawDescGZIP() []byte {
	file_proto_address_v1_address_proto_rawDescOnce.Do(func() {
		file_proto_address_v1_address_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_address_v1_address_proto_rawDescData)
	})
	return file_proto_address_v1_address_proto_rawDescData
}

var file_proto_address_v1_address_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_address_v1_address_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_address_v1_address_proto_goTypes = []interface{}{
	(WhereCondition)(0),        // 0: proto.address.v1.WhereCondition
	(*Address)(nil),            // 1: proto.address.v1.Address
	(*RequestFilter)(nil),      // 2: proto.address.v1.RequestFilter
	nil,                        // 3: proto.address.v1.RequestFilter.WhereInEntry
	nil,                        // 4: proto.address.v1.RequestFilter.WhereNotInEntry
	nil,                        // 5: proto.address.v1.RequestFilter.BetweenEntry
	(*structpb.Struct)(nil),    // 6: google.protobuf.Struct
	(*structpb.ListValue)(nil), // 7: google.protobuf.ListValue
}
var file_proto_address_v1_address_proto_depIdxs = []int32{
	6, // 0: proto.address.v1.RequestFilter.where:type_name -> google.protobuf.Struct
	3, // 1: proto.address.v1.RequestFilter.where_in:type_name -> proto.address.v1.RequestFilter.WhereInEntry
	0, // 2: proto.address.v1.RequestFilter.where_condition:type_name -> proto.address.v1.WhereCondition
	4, // 3: proto.address.v1.RequestFilter.where_not_in:type_name -> proto.address.v1.RequestFilter.WhereNotInEntry
	6, // 4: proto.address.v1.RequestFilter.where_not_equal:type_name -> google.protobuf.Struct
	5, // 5: proto.address.v1.RequestFilter.between:type_name -> proto.address.v1.RequestFilter.BetweenEntry
	7, // 6: proto.address.v1.RequestFilter.WhereInEntry.value:type_name -> google.protobuf.ListValue
	7, // 7: proto.address.v1.RequestFilter.WhereNotInEntry.value:type_name -> google.protobuf.ListValue
	7, // 8: proto.address.v1.RequestFilter.BetweenEntry.value:type_name -> google.protobuf.ListValue
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_proto_address_v1_address_proto_init() }
func file_proto_address_v1_address_proto_init() {
	if File_proto_address_v1_address_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_address_v1_address_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_address_v1_address_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_address_v1_address_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_address_v1_address_proto_goTypes,
		DependencyIndexes: file_proto_address_v1_address_proto_depIdxs,
		EnumInfos:         file_proto_address_v1_address_proto_enumTypes,
		MessageInfos:      file_proto_address_v1_address_proto_msgTypes,
	}.Build()
	File_proto_address_v1_address_proto = out.File
	file_proto_address_v1_address_proto_rawDesc = nil
	file_proto_address_v1_address_proto_goTypes = nil
	file_proto_address_v1_address_proto_depIdxs = nil
}
